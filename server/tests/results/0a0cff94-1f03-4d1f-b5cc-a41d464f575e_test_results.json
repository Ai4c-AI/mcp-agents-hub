{
  "repository": {
    "name": "AWS Knowledge Base",
    "url": "https://github.com/sammcj/mcp-aws-kb",
    "hubId": "0a0cff94-1f03-4d1f-b5cc-a41d464f575e"
  },
  "readmePreview": "# AWS Knowledge Base Retrieval MCP Server\n\nAn MCP server implementation for retrieving information from the AWS Knowledge Base using the Bedrock Agent Runtime.\n\n## Features\n\n- **RAG (Retrieval-Augmented Generation)**: Retrieve context from the AWS Knowledge Base based on a query and a Knowledge Base ID.\n- **Supports multiple results retrieval**: Option to retrieve a customizable number of results.\n\n## Tools\n\n- **retrieve_from_aws_kb**\n  - Perform retrieval operations using the AWS Knowledge Base...",
  "extractedInfo": {
    "name": "AWS Knowledge Base Retrieval MCP Server",
    "description": "An MCP server implementation for retrieving information from the AWS Knowledge Base using the Bedrock Agent Runtime.",
    "Installation_instructions": "You can install the server using Docker or NPX. For Docker, build the image using the provided Dockerfile. For NPX, use the command 'npx -y @modelcontextprotocol/server-aws-kb-retrieval'. Ensure AWS credentials are configured either via IAM Access Keys or AWS SSO.",
    "Usage_instructions": "Use the 'retrieve_from_aws_kb' tool to perform retrieval operations. Inputs include 'query', 'knowledgeBaseId', and optionally 'n' for the number of results. The response includes raw context and structured RAG sources with metadata.",
    "features": [
      "RAG (Retrieval-Augmented Generation): Retrieve context from the AWS Knowledge Base based on a query and a Knowledge Base ID.",
      "Supports multiple results retrieval: Option to retrieve a customizable number of results."
    ],
    "prerequisites": [
      "AWS access key ID, secret access key, and region from the AWS Management Console.",
      "AWS CLI configured with SSO profile if using AWS SSO.",
      "Docker installed if using Docker for installation.",
      "Node.js installed if using NPX or running from a local repository."
    ]
  }
}